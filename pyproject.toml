# --- Basic info ---
[project]
name = "ml-sandbox"
version = "0.1.0"
description = "A machine learning sandbox project for experimentation and learning"
readme = "README.md"
authors = [
    {name = "Dominik Bereżański", email = "domberez@gmail.com"},
    {name = "Paul Hoheisel", email = "paul.hoheisel@example.com"}
]
maintainers = [
    {name = "Dominik Bereżański", email = "domberez@gmail.com"},
    {name = "Paul Hoheisel", email = "paul.hoheisel@example.com"}
]
keywords = ["machine-learning", "data-science", "python", "jupyter"]

# --- Dependencies ---
requires-python = ">=3.12"
dependencies = [
    # "asttokens==3.0.0",
    # "comm==0.2.3",
    # "debugpy==1.8.17",
    # "decorator==5.2.1",
    # "executing==2.2.1",
    # "filelock==3.13.1",
    # "fsspec==2024.6.1",
    # "ipykernel==6.30.1",
    # "ipython==9.6.0",
    # "ipython_pygments_lexers==1.1.1",
    # "jedi==0.19.2",
    # "Jinja2==3.1.4",
    # "jupyter_client==8.6.3",
    # "jupyter_core==5.8.1",
    # "MarkupSafe==2.1.5",
    # "matplotlib-inline==0.1.7",
    # "mpmath==1.3.0",
    # "nest-asyncio==1.6.0",
    # "networkx==3.3",
    # "numpy==2.3.3",
    # "packaging==25.0",
    # "parso==0.8.5",
    # "pexpect==4.9.0",
    # "pillow==11.0.0",
    # "platformdirs==4.4.0",
    # "prompt_toolkit==3.0.52",
    # "psutil==7.1.0",
    # "ptyprocess==0.7.0",
    # "pure_eval==0.2.3",
    # "Pygments==2.19.2",
    # "python-dateutil==2.9.0.post0",
    # "pyzmq==27.1.0",
    # "sympy==1.13.3",
    # "tornado==6.5.2",
    # "traitlets==5.14.3",
    # "triton==3.4.0",
    # "typing_extensions==4.12.2",
    # "wcwidth==0.2.14",
    # CUDA-enabled torch & torchvision need special URL or index source
    "torch",
    "torchvision",
]

[project.optional-dependencies]
cuda = [
    "nvidia-cublas-cu12==12.6.4.1",
    "nvidia-cuda-cupti-cu12==12.6.80",
    "nvidia-cuda-nvrtc-cu12==12.6.77",
    "nvidia-cuda-runtime-cu12==12.6.77",
    "nvidia-cudnn-cu12==9.10.2.21",
    "nvidia-cufft-cu12==11.3.0.4",
    "nvidia-cufile-cu12==1.11.1.6",
    "nvidia-curand-cu12==10.3.7.77",
    "nvidia-cusolver-cu12==11.7.1.2",
    "nvidia-cusparse-cu12==12.5.4.2",
    "nvidia-cusparselt-cu12==0.7.1",
    "nvidia-nccl-cu12==2.27.3",
    "nvidia-nvjitlink-cu12==12.6.85",
    "nvidia-nvtx-cu12==12.6.77",
]

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"


[[tool.uv.index]]
name = "pytorch-cu126"
url = "https://download.pytorch.org/whl/cu126"

[tool.uv.sources]
torch = { index = "pytorch-cu126" }
torchvision = { index = "pytorch-cu126" }

[project.urls]
Homepage = "https://https://github.com/paulhoheisel/ml-sandbox"
Repository = "https://github.com/paulhoheisel/ml-sandbox"
Documentation = "https://github.com/paulhoheisel/ml-sandbox#readme"

# Main directory for the source code
[tool.setuptools]
packages = ["src"]

# [tool.setuptools.package-dir]
# "" = "src"


# --- Pytest configuration ---
[tool.pytest.ini_options]
minversion = "6.0"
# Enhanced options: show durations of 5 slowest tests, strict markers, and detailed output
addopts = [
    "-ra",                    # Show extra test summary info for all except passed
    "-q",                     # Quiet mode
    "--strict-markers",       # Treat unregistered markers as errors
    "--strict-config",        # Treat config warnings as errors
    "--durations=5",          # Show 5 slowest test durations
    "--tb=short",             # Shorter traceback format
    "--disable-warnings",     # Disable pytest warnings (can be overridden with -W)
]
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
# Test markers for organizing and filtering tests
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "download: marks tests that require internet connection (deselect with '-m \"not download\"')",
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "unit: marks tests as unit tests",
    "mnist: marks tests specific to MNIST dataset",
    "fashion_mnist: marks tests specific to Fashion-MNIST dataset", 
    "cifar10: marks tests specific to CIFAR-10 dataset",
    "transform: marks tests that test data transformations",
    "dataset_api: marks tests for the dataset API functions",
    "error_handling: marks tests for error conditions",
    "plots: marks tests for the plotting utilities",
]
# Filter warnings
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "error::FutureWarning",  # Treat FutureWarnings as errors to catch API changes
]
# Minimum test coverage (if using pytest-cov)
# addopts = [..., "--cov=src", "--cov-report=term-missing", "--cov-fail-under=80"]